===========================
The Econotag Sample Project
===========================

:Author:    Dean Hall
:Id:        $Id$

Purpose
-------

This is a sample project that demonstrates running interactive PyMite on the
`Redbee Econotag`_.

.. _`Redbee Econotag`: http://redwirellc.com/store/index.php?route=product/product&product_id=56


Requirements
------------

A POSIX-compliant OS (Mac OS X, Linux) is required for the build environment.
Using the Cygwin_ environment within Windows might work, but is untested.

Using GNU tools (GCC and Make) are strongly recommended.  Because the GNU
toolchain for ARM varies significantly based on the configuration options when
the toolchain was built, the following project is strongly recommended to
use to build your own toolchain::

    http://github.com/jsnyder/arm-eabi-toolchain/

All of the makefile to build this sample project assume use of the
arm-none-eabi- toolchain and Newlib.

**Be sure you have installed every dependency listed and
perform each preparation step shown on that page!**

Both the toolchain builder and the libmc1322x third party library require
the use of git_.

The tool used to load the binary of the build product is written in Python
and requires the PySerial_ library.  The quick way to install PySerial is::

    $ sudo easy_install pyserial

.. _Cygwin: http://www.cygwin.com/
.. _git: http://git-scm.com/
.. _PySerial: http://pyserial.sourceforge.net/


Building the Project
--------------------

Start with a clean PyMite tree.  Run ``make once`` in the directory this file
is in to download a required third-party library::

    $ cd src/platform/econotag
    $ make once

Then build from the base of the project::

    $ cd ../../..
    $ make PLATFORM=econotag


Loading and Running the Binary
------------------------------

Load the resulting binary on the econotag using either the perl-based loader::

    $ cd src/platform/econotag
    $ make load

**or** the python-based loader::

    $ cd src/platform/econotag
    $ make loadpy

The default sample project runs the interactive prompt, ipm.
Read ``docs/src/InteractivePyMite.txt`` to learn more about ipm.
Here is the shortcut (the path to your serial device will vary)::

    $ cd ../../tools
    $ ./ipm.py -f ../platform/econotag/pmfeatures.py --serial /dev/tty.usbserial-000030FDB --baud=115200

.. :mode=rest:
